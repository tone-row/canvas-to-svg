{"version":3,"file":"cytoscape-svg.js","sources":["node_modules/canvas-to-svg/src/helpers.ts","node_modules/canvas-to-svg/src/shared.ts","node_modules/canvas-to-svg/src/CanvasToSvg.ts","src/convert-to-svg.js","src/index.js"],"sourcesContent":["//helper function to format a string\nexport function format(str: string, args: any): string {\n  var keys = Object.keys(args),\n    i;\n  for (i = 0; i < keys.length; i++) {\n    str = str.replace(new RegExp(\"\\\\{\" + keys[i] + \"\\\\}\", \"gi\"), args[keys[i]]);\n  }\n  return str;\n}\n\n//helper function that generates a random string\nexport function randomString(holder: Record<string, unknown>) {\n  var chars, randomstring, i;\n  if (!holder) {\n    throw new Error(\n      \"cannot create a random attribute name for an undefined object\"\n    );\n  }\n  chars = \"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\";\n  randomstring = \"\";\n  do {\n    randomstring = \"\";\n    for (i = 0; i < 12; i++) {\n      randomstring += chars[Math.floor(Math.random() * chars.length)];\n    }\n  } while (holder[randomstring]);\n  return randomstring;\n}\n\n//helper function to map named to numbered entities\nexport function createNamedToNumberedLookup(items: string, radix = 10) {\n  let i,\n    entity,\n    lookup = {} as Record<string, string>,\n    base10;\n  const itemsArr = items.split(\",\");\n  // Map from named to numbered entities.\n  for (i = 0; i < itemsArr.length; i += 2) {\n    entity = \"&\" + itemsArr[i + 1] + \";\";\n    base10 = parseInt(itemsArr[i], radix);\n    lookup[entity] = \"&#\" + base10 + \";\";\n  }\n  //FF and IE need to create a regex from hex values ie &nbsp; == \\xa0\n  lookup[\"\\\\xa0\"] = \"&#160;\";\n  return lookup;\n}\n\n//TODO: support rtl languages\nconst getTextAnchorMap = {\n  left: \"start\",\n  right: \"end\",\n  center: \"middle\",\n  start: \"start\",\n  end: \"end\",\n};\n//helper function to map canvas-textAlign to svg-textAnchor\nexport function getTextAnchor(textAlign: keyof typeof getTextAnchorMap) {\n  return getTextAnchorMap[textAlign] || getTextAnchorMap.start;\n}\n\n//INFO: not supported in all browsers\nconst getDominantBaselineMap = {\n  alphabetic: \"alphabetic\",\n  hanging: \"hanging\",\n  top: \"text-before-edge\",\n  bottom: \"text-after-edge\",\n  middle: \"central\",\n};\n//helper function to map canvas-textBaseline to svg-dominantBaseline\nexport function getDominantBaseline(\n  textBaseline: keyof typeof getDominantBaselineMap\n) {\n  return (\n    getDominantBaselineMap[textBaseline] || getDominantBaselineMap.alphabetic\n  );\n}\n\n/**\n * Return a new normalized vector of given vector\n */\nexport const normalize = function (vector: [number, number]) {\n  var len = Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);\n  return [vector[0] / len, vector[1] / len];\n};\n","import { createNamedToNumberedLookup, format } from \"./helpers\";\n\nexport const namedEntities = createNamedToNumberedLookup(\n  \"50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,\" +\n    \"5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,\" +\n    \"5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,\" +\n    \"5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,\" +\n    \"68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,\" +\n    \"6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,\" +\n    \"6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,\" +\n    \"75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,\" +\n    \"7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,\" +\n    \"7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,\" +\n    \"sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,\" +\n    \"st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,\" +\n    \"t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,\" +\n    \"tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,\" +\n    \"u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,\" +\n    \"81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,\" +\n    \"8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,\" +\n    \"8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,\" +\n    \"8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,\" +\n    \"8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,\" +\n    \"nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,\" +\n    \"rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,\" +\n    \"Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,\" +\n    \"80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,\" +\n    \"811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro\",\n  32\n);\n\nexport const STYLES = {\n  strokeStyle: {\n    svgAttr: \"stroke\", //corresponding svg attribute\n    canvas: \"#000000\", //canvas default\n    svg: \"none\", //svg default\n    apply: \"stroke\", //apply on stroke() or fill()\n  },\n  fillStyle: {\n    svgAttr: \"fill\",\n    canvas: \"#000000\",\n    svg: null, //svg default is black, but we need to special case this to handle canvas stroke without fill\n    apply: \"fill\",\n  },\n  lineCap: {\n    svgAttr: \"stroke-linecap\",\n    canvas: \"butt\",\n    svg: \"butt\",\n    apply: \"stroke\",\n  },\n  lineJoin: {\n    svgAttr: \"stroke-linejoin\",\n    canvas: \"miter\",\n    svg: \"miter\",\n    apply: \"stroke\",\n  },\n  miterLimit: {\n    svgAttr: \"stroke-miterlimit\",\n    canvas: 10,\n    svg: 4,\n    apply: \"stroke\",\n  },\n  lineWidth: {\n    svgAttr: \"stroke-width\",\n    canvas: 1,\n    svg: 1,\n    apply: \"stroke\",\n  },\n  globalAlpha: {\n    svgAttr: \"opacity\",\n    canvas: 1,\n    svg: 1,\n    apply: \"fill stroke\",\n  },\n  font: {\n    //font converts to multiple svg attributes, there is custom logic for this\n    canvas: \"10px sans-serif\",\n  },\n  shadowColor: {\n    canvas: \"#000000\",\n  },\n  shadowOffsetX: {\n    canvas: 0,\n  },\n  shadowOffsetY: {\n    canvas: 0,\n  },\n  shadowBlur: {\n    canvas: 0,\n  },\n  textAlign: {\n    canvas: \"start\",\n  },\n  textBaseline: {\n    canvas: \"alphabetic\",\n  },\n  lineDash: {\n    svgAttr: \"stroke-dasharray\",\n    canvas: [],\n    svg: null,\n    apply: \"stroke\",\n  },\n};\n\nexport class CanvasGradient {\n  __root: any;\n  __ctx: any;\n  constructor(gradientNode: any, ctx: any) {\n    this.__root = gradientNode;\n    this.__ctx = ctx;\n  }\n\n  addColorStop(offset: number, color: string) {\n    var stop = this.__ctx.__createElement(\"stop\"),\n      regex,\n      matches;\n    stop.setAttribute(\"offset\", offset);\n    if (color.indexOf(\"rgba\") !== -1) {\n      //separate alpha value, since webkit can't handle it\n      regex = /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n      matches = regex.exec(color);\n      if (matches) {\n        stop.setAttribute(\n          \"stop-color\",\n          format(\"rgb({r},{g},{b})\", {\n            r: matches[1],\n            g: matches[2],\n            b: matches[3],\n          })\n        );\n        stop.setAttribute(\"stop-opacity\", matches[4]);\n      }\n    } else {\n      stop.setAttribute(\"stop-color\", color);\n    }\n    this.__root.appendChild(stop);\n  }\n}\n\nexport class CanvasPattern {\n  __root: any;\n  __ctx: any;\n  constructor(patternNode: any, ctx: any) {\n    this.__root = patternNode;\n    this.__ctx = ctx;\n  }\n}\n","import {\n  format,\n  getDominantBaseline,\n  getTextAnchor,\n  normalize,\n  randomString,\n} from \"./helpers\";\nimport { STYLES, CanvasPattern, CanvasGradient, namedEntities } from \"./shared\";\n\ntype Options = {\n  width: number;\n  height: number;\n  enableMirroring: boolean;\n  document?: Document;\n  ctx?: CanvasRenderingContext2D;\n};\nconst defaultOptions: Options = {\n  width: 500,\n  height: 500,\n  enableMirroring: false,\n};\n\nexport class CanvasToSvg {\n  width: number;\n  height: number;\n  enableMirroring: boolean;\n  canvas: CanvasToSvg;\n  __document: Document;\n  __canvas?: HTMLCanvasElement;\n  __ctx: CanvasRenderingContext2D;\n  __ids: { [key: string]: string };\n  __root: SVGSVGElement;\n  __defs: SVGElement;\n  __currentElement: SVGElement | undefined;\n  __groupStack: SVGElement[];\n  __currentElementsToStyle: null | { element: any; children: any[] } = null;\n  [k: string]: any;\n\n  constructor(width?: number, height?: number);\n  constructor(options: Options | number = defaultOptions, height?: number) {\n    let __ctx;\n    if (typeof options === \"number\") {\n      this.width = options;\n      this.height = height ?? defaultOptions.height;\n      this.enableMirroring = defaultOptions.enableMirroring;\n      this.__document = document;\n    } else {\n      this.width = options.width ?? defaultOptions.width;\n      this.height = options.height ?? defaultOptions.height;\n      this.enableMirroring =\n        options.enableMirroring ?? defaultOptions.enableMirroring;\n      this.__document = options.document || document;\n      __ctx = options.ctx;\n    }\n\n    if (!__ctx) {\n      // allow passing in an existing context to wrap around\n      // if a context is passed in, we know a canvas already exist\n      this.__canvas = this.__document.createElement(\"canvas\");\n      __ctx = this.__canvas.getContext(\"2d\");\n      if (!__ctx) throw new Error(\"Unable to get canvas context\");\n    }\n\n    this.__ctx = __ctx;\n    this.canvas = this; ///point back to this instance!\n\n    this.__setDefaultStyles();\n    this.__stack = [this.__getStyleState()];\n    this.__groupStack = [];\n\n    //the root svg element\n    this.__root = this.__document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"svg\"\n    );\n    this.__root.setAttribute(\"version\", \"1.1\");\n    this.__root.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    this.__root.setAttributeNS(\n      \"http://www.w3.org/2000/xmlns/\",\n      \"xmlns:xlink\",\n      \"http://www.w3.org/1999/xlink\"\n    );\n    this.__root.setAttribute(\"width\", this.width.toString());\n    this.__root.setAttribute(\"height\", this.height.toString());\n\n    //make sure we don't generate the same ids in defs\n    this.__ids = {};\n\n    //defs tag\n    this.__defs = this.__document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"defs\"\n    );\n    this.__root.appendChild(this.__defs);\n\n    //also add a group child. the svg element can't use the transform attribute\n    this.__currentElement = this.__document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"g\"\n    );\n    this.__root.appendChild(this.__currentElement);\n  }\n\n  __createElement(elementName: string, properties?: any, resetFill?: boolean) {\n    if (typeof properties === \"undefined\") {\n      properties = {};\n    }\n\n    var element = this.__document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        elementName\n      ),\n      keys = Object.keys(properties),\n      i,\n      key;\n    if (resetFill) {\n      //if fill or stroke is not specified, the svg element should not display. By default SVG's fill is black.\n      element.setAttribute(\"fill\", \"none\");\n      element.setAttribute(\"stroke\", \"none\");\n    }\n    for (i = 0; i < keys.length; i++) {\n      key = keys[i];\n      element.setAttribute(key, properties[key]);\n    }\n    return element;\n  }\n\n  __setDefaultStyles() {\n    //default 2d canvas context properties see:http://www.w3.org/TR/2dcontext/\n    for (let key in STYLES) {\n      this[key] = STYLES[key as keyof typeof STYLES].canvas;\n    }\n  }\n\n  /**\n   * Applies styles on restore\n   */\n  __applyStyleState(styleState: any) {\n    let keys = Object.keys(styleState),\n      i,\n      key;\n    for (i = 0; i < keys.length; i++) {\n      key = keys[i];\n      this[key] = styleState[key];\n    }\n  }\n\n  /**\n   * Gets the current style state\n   */\n  __getStyleState() {\n    let i,\n      styleState = {} as any,\n      keys = Object.keys(STYLES),\n      key;\n    for (i = 0; i < keys.length; i++) {\n      key = keys[i];\n      styleState[key] = this[key];\n    }\n    return styleState;\n  }\n\n  /**\n   * Applies the current styles to the current SVG element. On \"ctx.fill\" or \"ctx.stroke\"\n   */\n  __applyStyleToCurrentElement(type: \"stroke\" | \"fill\") {\n    if (!this.__currentElement) return;\n    let currentElement = this.__currentElement;\n\n    let keys = Object.keys(STYLES),\n      i,\n      style,\n      value,\n      id,\n      regex,\n      matches;\n    for (i = 0; i < keys.length; i++) {\n      style = STYLES[keys[i] as keyof typeof STYLES];\n      value = this[keys[i]];\n      if (\"apply\" in style) {\n        //is this a gradient or pattern?\n        if (value instanceof CanvasPattern) {\n          //pattern\n          if (value.__ctx) {\n            //copy over defs\n            while (value.__ctx.__defs.childNodes.length) {\n              id = value.__ctx.__defs.childNodes[0].getAttribute(\"id\");\n              this.__ids[id] = id;\n              this.__defs.appendChild(value.__ctx.__defs.childNodes[0]);\n            }\n          }\n          currentElement.setAttribute(\n            style.apply,\n            format(\"url(#{id})\", { id: value.__root.getAttribute(\"id\") })\n          );\n        } else if (value instanceof CanvasGradient) {\n          //gradient\n          currentElement.setAttribute(\n            style.apply,\n            format(\"url(#{id})\", { id: value.__root.getAttribute(\"id\") })\n          );\n        } else if (style.apply.indexOf(type) !== -1 && style.svg !== value) {\n          if (\n            (style.svgAttr === \"stroke\" || style.svgAttr === \"fill\") &&\n            value.indexOf(\"rgba\") !== -1\n          ) {\n            //separate alpha value, since illustrator can't handle it\n            regex =\n              /rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi;\n            matches = regex.exec(value);\n            if (matches) {\n              currentElement.setAttribute(\n                style.svgAttr,\n                format(\"rgb({r},{g},{b})\", {\n                  r: matches[1],\n                  g: matches[2],\n                  b: matches[3],\n                })\n              );\n              //should take globalAlpha here\n              let opacity = parseFloat(matches[4]);\n              let globalAlpha = this.globalAlpha;\n              if (globalAlpha != null) {\n                opacity *= globalAlpha;\n              }\n              currentElement.setAttribute(\n                style.svgAttr + \"-opacity\",\n                opacity.toString()\n              );\n            }\n          } else {\n            let attr = style.svgAttr;\n            if (keys[i] === \"globalAlpha\") {\n              attr = type + \"-\" + style.svgAttr;\n              if (currentElement.getAttribute(attr)) {\n                //fill-opacity or stroke-opacity has already been set by stroke or fill.\n                continue;\n              }\n            }\n            //otherwise only update attribute if right type, and not svg default\n            currentElement.setAttribute(attr, value);\n          }\n        }\n      }\n    }\n  }\n\n  __closestGroupOrSvg(\n    node: SVGElement | ParentNode | undefined | null = this.__currentElement\n  ): SVGElement | void {\n    if (!node) return;\n    if (node.nodeName === \"g\" || node.nodeName === \"svg\")\n      return node as SVGElement;\n    return this.__closestGroupOrSvg(node.parentNode);\n  }\n\n  /**\n   * Returns the serialized value of the svg so far\n   * @param fixNamedEntities - Standalone SVG doesn't support named entities, which document.createTextNode encodes.\n   *                           If true, we attempt to find all named entities and encode it as a numeric entity.\n   * @return serialized svg\n   */\n  getSerializedSvg(fixNamedEntities: boolean) {\n    let serialized = new XMLSerializer().serializeToString(this.__root),\n      keys,\n      i,\n      key,\n      value,\n      regexp,\n      xmlns;\n\n    //IE search for a duplicate xmnls because they didn't implement setAttributeNS correctly\n    xmlns =\n      /xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi;\n    if (xmlns.test(serialized)) {\n      serialized = serialized.replace(\n        'xmlns=\"http://www.w3.org/2000/svg',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink'\n      );\n    }\n\n    if (fixNamedEntities) {\n      keys = Object.keys(namedEntities);\n      //loop over each named entity and replace with the proper equivalent.\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        value = namedEntities[key];\n        regexp = new RegExp(key, \"gi\");\n        if (regexp.test(serialized)) {\n          serialized = serialized.replace(regexp, value);\n        }\n      }\n    }\n\n    return serialized;\n  }\n  /**\n   * Returns the root svg\n   * @return\n   */\n  getSvg() {\n    return this.__root;\n  }\n\n  /**\n   * Will generate a group tag.\n   */\n  save() {\n    const group = this.__createElement(\"g\");\n    const parent = this.__closestGroupOrSvg();\n    if (parent) this.__groupStack.push(parent);\n    (parent as Node).appendChild(group);\n    this.__currentElement = group;\n    this.__stack.push(this.__getStyleState());\n  }\n\n  /**\n   * Sets current element to parent, or just root if already root\n   */\n  restore() {\n    this.__currentElement = this.__groupStack.pop();\n    this.__currentElementsToStyle = null;\n    //Clearing canvas will make the poped group invalid, currentElement is set to the root group node.\n    if (!this.__currentElement) {\n      this.__currentElement = this.__root.childNodes[1] as SVGElement;\n    }\n    let state = this.__stack.pop();\n    this.__applyStyleState(state);\n  }\n\n  /**\n   * Helper method to add transform\n   * @private\n   */\n  __addTransform(t: any) {\n    if (!this.__currentElement) return;\n    //if the current element has siblings, add another group\n    const parent = this.__closestGroupOrSvg();\n    if (!parent) return;\n    if (parent.childNodes.length > 0) {\n      if (this.__currentElement.nodeName === \"path\") {\n        if (!this.__currentElementsToStyle)\n          this.__currentElementsToStyle = { element: parent, children: [] };\n        this.__currentElementsToStyle.children.push(this.__currentElement);\n        this.__applyCurrentDefaultPath();\n      }\n\n      let group = this.__createElement(\"g\");\n      parent.appendChild(group);\n      this.__currentElement = group;\n    }\n\n    if (!this.__currentElement) return;\n    let transform = this.__currentElement.getAttribute(\"transform\");\n    if (transform) {\n      transform += \" \";\n    } else {\n      transform = \"\";\n    }\n    transform += t;\n    this.__currentElement.setAttribute(\"transform\", transform);\n  }\n\n  /**\n   *  scales the current element\n   */\n  scale(x: any, y: any) {\n    if (y === undefined) {\n      y = x;\n    }\n    this.__addTransform(format(\"scale({x},{y})\", { x: x, y: y }));\n  }\n\n  /**\n   * rotates the current element\n   */\n  rotate(angle: any) {\n    let degrees = (angle * 180) / Math.PI;\n    this.__addTransform(\n      format(\"rotate({angle},{cx},{cy})\", { angle: degrees, cx: 0, cy: 0 })\n    );\n  }\n\n  /**\n   * translates the current element\n   */\n  translate(x: any, y: any) {\n    this.__addTransform(format(\"translate({x},{y})\", { x: x, y: y }));\n  }\n\n  /**\n   * applies a transform to the current element\n   */\n  transform(a: any, b: any, c: any, d: any, e: any, f: any) {\n    this.__addTransform(\n      format(\"matrix({a},{b},{c},{d},{e},{f})\", {\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n        e: e,\n        f: f,\n      })\n    );\n  }\n\n  /**\n   * Create a new Path Element\n   */\n  beginPath() {\n    let path, parent;\n\n    // Note that there is only one current default path, it is not part of the drawing state.\n    // See also: https://html.spec.whatwg.org/multipage/scripting.html#current-default-path\n    this.__currentDefaultPath = \"\";\n    this.__currentPosition = {};\n\n    path = this.__createElement(\"path\", {}, true);\n    parent = this.__closestGroupOrSvg();\n    if (!parent) return;\n    parent.appendChild(path);\n    this.__currentElement = path;\n  }\n\n  /**\n   * Helper function to apply currentDefaultPath to current path element\n   * @private\n   */\n  __applyCurrentDefaultPath() {\n    let currentElement = this.__currentElement;\n    if (!currentElement) return;\n    if (currentElement.nodeName === \"path\") {\n      currentElement.setAttribute(\"d\", this.__currentDefaultPath);\n    } else {\n      console.error(\n        \"Attempted to apply path command to node\",\n        currentElement.nodeName\n      );\n    }\n  }\n\n  /**\n   * Helper function to add path command\n   * @private\n   */\n  __addPathCommand(command: any) {\n    this.__currentDefaultPath += \" \";\n    this.__currentDefaultPath += command;\n  }\n\n  /**\n   * Adds the move command to the current path element,\n   * if the currentPathElement is not empty create a new path element\n   */\n  moveTo(x: number, y: number) {\n    if (!this.__currentElement) return;\n    if (this.__currentElement.nodeName !== \"path\") {\n      this.beginPath();\n    }\n\n    // creates a new subpath with the given point\n    this.__currentPosition = { x: x, y: y };\n    this.__addPathCommand(format(\"M {x} {y}\", { x: x, y: y }));\n  }\n\n  /**\n   * Closes the current path\n   */\n  closePath() {\n    if (this.__currentDefaultPath) {\n      this.__addPathCommand(\"Z\");\n    }\n  }\n\n  /**\n   * Adds a line to command\n   */\n  lineTo(x: any, y: any) {\n    this.__currentPosition = { x: x, y: y };\n    if (this.__currentDefaultPath.indexOf(\"M\") > -1) {\n      this.__addPathCommand(format(\"L {x} {y}\", { x: x, y: y }));\n    } else {\n      this.__addPathCommand(format(\"M {x} {y}\", { x: x, y: y }));\n    }\n  }\n\n  /**\n   * Add a bezier command\n   */\n  bezierCurveTo(cp1x: any, cp1y: any, cp2x: any, cp2y: any, x: any, y: any) {\n    this.__currentPosition = { x: x, y: y };\n    this.__addPathCommand(\n      format(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\", {\n        cp1x: cp1x,\n        cp1y: cp1y,\n        cp2x: cp2x,\n        cp2y: cp2y,\n        x: x,\n        y: y,\n      })\n    );\n  }\n\n  /**\n   * Adds a quadratic curve to command\n   */\n  quadraticCurveTo(cpx: any, cpy: any, x: any, y: any) {\n    this.__currentPosition = { x: x, y: y };\n    this.__addPathCommand(\n      format(\"Q {cpx} {cpy} {x} {y}\", { cpx: cpx, cpy: cpy, x: x, y: y })\n    );\n  }\n\n  /**\n   * Adds the arcTo to the current path\n   *\n   * @see http://www.w3.org/TR/2015/WD-2dcontext-20150514/#dom-context-2d-arcto\n   */\n  arcTo(x1: any, y1: any, x2: any, y2: any, radius: any) {\n    // Let the point (x0, y0) be the last point in the subpath.\n    let x0 = this.__currentPosition && this.__currentPosition.x;\n    let y0 = this.__currentPosition && this.__currentPosition.y;\n\n    // First ensure there is a subpath for (x1, y1).\n    if (typeof x0 == \"undefined\" || typeof y0 == \"undefined\") {\n      return;\n    }\n\n    // Negative values for radius must cause the implementation to throw an IndexSizeError exception.\n    if (radius < 0) {\n      throw new Error(\n        \"IndexSizeError: The radius provided (\" + radius + \") is negative.\"\n      );\n    }\n\n    // If the point (x0, y0) is equal to the point (x1, y1),\n    // or if the point (x1, y1) is equal to the point (x2, y2),\n    // or if the radius radius is zero,\n    // then the method must add the point (x1, y1) to the subpath,\n    // and connect that point to the previous point (x0, y0) by a straight line.\n    if ((x0 === x1 && y0 === y1) || (x1 === x2 && y1 === y2) || radius === 0) {\n      this.lineTo(x1, y1);\n      return;\n    }\n\n    // Otherwise, if the points (x0, y0), (x1, y1), and (x2, y2) all lie on a single straight line,\n    // then the method must add the point (x1, y1) to the subpath,\n    // and connect that point to the previous point (x0, y0) by a straight line.\n    let unit_vec_p1_p0 = normalize([x0 - x1, y0 - y1]);\n    let unit_vec_p1_p2 = normalize([x2 - x1, y2 - y1]);\n    if (\n      unit_vec_p1_p0[0] * unit_vec_p1_p2[1] ===\n      unit_vec_p1_p0[1] * unit_vec_p1_p2[0]\n    ) {\n      this.lineTo(x1, y1);\n      return;\n    }\n\n    // Otherwise, let The Arc be the shortest arc given by circumference of the circle that has radius radius,\n    // and that has one point tangent to the half-infinite line that crosses the point (x0, y0) and ends at the point (x1, y1),\n    // and that has a different point tangent to the half-infinite line that ends at the point (x1, y1), and crosses the point (x2, y2).\n    // The points at which this circle touches these two lines are called the start and end tangent points respectively.\n\n    // note that both vectors are unit vectors, so the length is 1\n    let cos =\n      unit_vec_p1_p0[0] * unit_vec_p1_p2[0] +\n      unit_vec_p1_p0[1] * unit_vec_p1_p2[1];\n    let theta = Math.acos(Math.abs(cos));\n\n    // Calculate origin\n    let unit_vec_p1_origin = normalize([\n      unit_vec_p1_p0[0] + unit_vec_p1_p2[0],\n      unit_vec_p1_p0[1] + unit_vec_p1_p2[1],\n    ]);\n    let len_p1_origin = radius / Math.sin(theta / 2);\n    let x = x1 + len_p1_origin * unit_vec_p1_origin[0];\n    let y = y1 + len_p1_origin * unit_vec_p1_origin[1];\n\n    // Calculate start angle and end angle\n    // rotate 90deg clockwise (note that y axis points to its down)\n    let unit_vec_origin_start_tangent = [-unit_vec_p1_p0[1], unit_vec_p1_p0[0]];\n    // rotate 90deg counter clockwise (note that y axis points to its down)\n    let unit_vec_origin_end_tangent = [unit_vec_p1_p2[1], -unit_vec_p1_p2[0]];\n    let getAngle = (vector: number[]) => {\n      // get angle (clockwise) between vector and (1, 0)\n      let x = vector[0];\n      let y = vector[1];\n      if (y >= 0) {\n        // note that y axis points to its down\n        return Math.acos(x);\n      } else {\n        return -Math.acos(x);\n      }\n    };\n    let startAngle = getAngle(unit_vec_origin_start_tangent);\n    let endAngle = getAngle(unit_vec_origin_end_tangent);\n\n    // Connect the point (x0, y0) to the start tangent point by a straight line\n    this.lineTo(\n      x + unit_vec_origin_start_tangent[0] * radius,\n      y + unit_vec_origin_start_tangent[1] * radius\n    );\n\n    // Connect the start tangent point to the end tangent point by arc\n    // and adding the end tangent point to the subpath.\n    this.arc(x, y, radius, startAngle, endAngle);\n  }\n\n  /**\n   * Sets the stroke property on the current element\n   */\n  stroke() {\n    if (!this.__currentElement) return;\n    if (this.__currentElement.nodeName === \"path\") {\n      this.__currentElement.setAttribute(\"paint-order\", \"fill stroke markers\");\n    }\n    this.__applyCurrentDefaultPath();\n    this.__applyStyleToCurrentElement(\"stroke\");\n  }\n\n  /**\n   * Sets fill properties on the current element\n   */\n  fill() {\n    debugger;\n    if (!this.__currentElement) return;\n    if (this.__currentElement.nodeName === \"path\") {\n      this.__currentElement.setAttribute(\"paint-order\", \"stroke fill markers\");\n    }\n    this.__applyCurrentDefaultPath();\n    this.__applyStyleToCurrentElement(\"fill\");\n  }\n\n  /**\n   *  Adds a rectangle to the path.\n   */\n  rect(x: any, y: any, width: any, height: any) {\n    if (!this.__currentElement) return;\n    if (this.__currentElement.nodeName !== \"path\") {\n      this.beginPath();\n    }\n    this.moveTo(x, y);\n    this.lineTo(x + width, y);\n    this.lineTo(x + width, y + height);\n    this.lineTo(x, y + height);\n    this.lineTo(x, y);\n    this.closePath();\n  }\n\n  /**\n   * adds a rectangle element\n   */\n  fillRect(x: any, y: any, width: any, height: any) {\n    let rect, parent;\n    rect = this.__createElement(\n      \"rect\",\n      {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n      },\n      true\n    );\n    parent = this.__closestGroupOrSvg();\n    (parent as Node).appendChild(rect);\n    this.__currentElement = rect;\n    this.__applyStyleToCurrentElement(\"fill\");\n  }\n\n  /**\n   * Draws a rectangle with no fill\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  strokeRect(x: any, y: any, width: any, height: any) {\n    let rect, parent;\n    rect = this.__createElement(\n      \"rect\",\n      {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n      },\n      true\n    );\n    parent = this.__closestGroupOrSvg();\n    (parent as Node).appendChild(rect);\n    this.__currentElement = rect;\n    this.__applyStyleToCurrentElement(\"stroke\");\n  }\n\n  /**\n   * Clear entire canvas:\n   * 1. save current transforms\n   * 2. remove all the childNodes of the root g element\n   */\n  __clearCanvas() {\n    let current = this.__closestGroupOrSvg();\n    if (!current) return;\n    let transform = current.getAttribute(\"transform\");\n    let rootGroup = this.__root.childNodes[1];\n    let childNodes = rootGroup.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      if (childNodes[i]) {\n        rootGroup.removeChild(childNodes[i]);\n      }\n    }\n    this.__currentElement = rootGroup as SVGElement;\n    //reset __groupStack as all the child group nodes are all removed.\n    this.__groupStack = [];\n    if (transform) {\n      this.__addTransform(transform);\n    }\n  }\n\n  /**\n   * \"Clears\" a canvas by just drawing a white rectangle in the current group.\n   */\n  clearRect(x: any, y: any, width: any, height: any) {\n    //clear entire canvas\n    if (x === 0 && y === 0 && width === this.width && height === this.height) {\n      this.__clearCanvas();\n      return;\n    }\n    let rect,\n      parent = this.__closestGroupOrSvg();\n    rect = this.__createElement(\n      \"rect\",\n      {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        fill: \"#FFFFFF\",\n      },\n      true\n    );\n    (parent as Node).appendChild(rect);\n  }\n\n  /**\n   * Adds a linear gradient to a defs tag.\n   * Returns a canvas gradient object that has a reference to it's parent def\n   */\n  createLinearGradient(x1: any, y1: any, x2: any, y2: any) {\n    let grad = this.__createElement(\n      \"linearGradient\",\n      {\n        id: randomString(this.__ids),\n        x1: x1 + \"px\",\n        x2: x2 + \"px\",\n        y1: y1 + \"px\",\n        y2: y2 + \"px\",\n        gradientUnits: \"userSpaceOnUse\",\n      },\n      false\n    );\n    this.__defs.appendChild(grad);\n    return new CanvasGradient(grad, this);\n  }\n\n  /**\n   * Adds a radial gradient to a defs tag.\n   * Returns a canvas gradient object that has a reference to it's parent def\n   */\n  createRadialGradient(x0: any, y0: any, r0: any, x1: any, y1: any, r1: any) {\n    let grad = this.__createElement(\n      \"radialGradient\",\n      {\n        id: randomString(this.__ids),\n        cx: x1 + \"px\",\n        cy: y1 + \"px\",\n        r: r1 + \"px\",\n        fx: x0 + \"px\",\n        fy: y0 + \"px\",\n        gradientUnits: \"userSpaceOnUse\",\n      },\n      false\n    );\n    this.__defs.appendChild(grad);\n    return new CanvasGradient(grad, this);\n  }\n\n  /**\n   * Parses the font string and returns svg mapping\n   * @private\n   */\n  __parseFont() {\n    let regex =\n      /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\'\\\"\\sa-z0-9]+?)\\s*$/i;\n    let fontPart = regex.exec(this.font);\n    if (!fontPart) return;\n    let data = {\n      style: fontPart[1] || \"normal\",\n      size: fontPart[4] || \"10px\",\n      family: fontPart[6] || \"sans-serif\",\n      weight: fontPart[3] || \"normal\",\n      decoration: fontPart[2] || \"normal\",\n      href: null,\n    };\n\n    //canvas doesn't support underline natively, but we can pass this attribute\n    if (this.__fontUnderline === \"underline\") {\n      data.decoration = \"underline\";\n    }\n\n    //canvas also doesn't support linking, but we can pass this as well\n    if (this.__fontHref) {\n      data.href = this.__fontHref;\n    }\n\n    return data;\n  }\n\n  /**\n   * Helper to link text fragments\n   * @param font\n   * @param element\n   * @return {*}\n   * @private\n   */\n  __wrapTextLink(font: any, element: any) {\n    if (font.href) {\n      let a = this.__createElement(\"a\");\n      a.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", font.href);\n      a.appendChild(element);\n      return a;\n    }\n    return element;\n  }\n\n  /**\n   * Fills or strokes text\n   * @param text\n   * @param x\n   * @param y\n   * @param action - stroke or fill\n   * @private\n   */\n  __applyText(text: any, x: any, y: any, action: any) {\n    let font = this.__parseFont(),\n      parent = this.__closestGroupOrSvg();\n    if (!font) return;\n    let textElement = this.__createElement(\n      \"text\",\n      {\n        \"font-family\": font.family,\n        \"font-size\": font.size,\n        \"font-style\": font.style,\n        \"font-weight\": font.weight,\n        \"text-decoration\": font.decoration,\n        x: x,\n        y: y,\n        \"text-anchor\": getTextAnchor(this.textAlign),\n        \"dominant-baseline\": getDominantBaseline(this.textBaseline),\n      },\n      true\n    );\n\n    textElement.appendChild(this.__document.createTextNode(text));\n    this.__currentElement = textElement;\n    this.__applyStyleToCurrentElement(action);\n    (parent as Node).appendChild(this.__wrapTextLink(font, textElement));\n  }\n\n  /**\n   * Creates a text element\n   * @param text\n   * @param x\n   * @param y\n   */\n  fillText(text: any, x: any, y: any) {\n    this.__applyText(text, x, y, \"fill\");\n  }\n\n  /**\n   * Strokes text\n   * @param text\n   * @param x\n   * @param y\n   */\n  strokeText(text: any, x: any, y: any) {\n    this.__applyText(text, x, y, \"stroke\");\n  }\n\n  /**\n   * No need to implement this for svg.\n   * @param text\n   * @return {TextMetrics}\n   */\n  measureText(text: any) {\n    this.__ctx.font = this.font;\n    return this.__ctx.measureText(text);\n  }\n\n  /**\n   *  Arc command!: any\n   */\n  arc(\n    x: any,\n    y: any,\n    radius: any,\n    startAngle: any,\n    endAngle: any,\n    counterClockwise?: any\n  ) {\n    // in canvas no circle is drawn if no angle is provided.\n    if (startAngle === endAngle) {\n      return;\n    }\n    startAngle = startAngle % (2 * Math.PI);\n    endAngle = endAngle % (2 * Math.PI);\n    if (startAngle === endAngle) {\n      //circle time! subtract some of the angle so svg is happy (svg elliptical arc can't draw a full circle)\n      endAngle =\n        (endAngle + 2 * Math.PI - 0.001 * (counterClockwise ? -1 : 1)) %\n        (2 * Math.PI);\n    }\n    let endX = x + radius * Math.cos(endAngle),\n      endY = y + radius * Math.sin(endAngle),\n      startX = x + radius * Math.cos(startAngle),\n      startY = y + radius * Math.sin(startAngle),\n      sweepFlag = counterClockwise ? 0 : 1,\n      largeArcFlag = 0,\n      diff = endAngle - startAngle;\n\n    // https://github.com/gliffy/canvas2svg/issues/4\n    if (diff < 0) {\n      diff += 2 * Math.PI;\n    }\n\n    if (counterClockwise) {\n      largeArcFlag = diff > Math.PI ? 0 : 1;\n    } else {\n      largeArcFlag = diff > Math.PI ? 1 : 0;\n    }\n\n    this.lineTo(startX, startY);\n    this.__addPathCommand(\n      format(\n        \"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",\n        {\n          rx: radius,\n          ry: radius,\n          xAxisRotation: 0,\n          largeArcFlag: largeArcFlag,\n          sweepFlag: sweepFlag,\n          endX: endX,\n          endY: endY,\n        }\n      )\n    );\n\n    this.__currentPosition = { x: endX, y: endY };\n  }\n\n  /**\n   * Generates a ClipPath from the clip command.\n   */\n  clip() {\n    let group = this.__closestGroupOrSvg(),\n      clipPath = this.__createElement(\"clipPath\"),\n      id = randomString(this.__ids),\n      newGroup = this.__createElement(\"g\");\n    if (!group) return;\n    if (!this.__currentElement) return;\n    this.__applyCurrentDefaultPath();\n    group.removeChild(this.__currentElement);\n    clipPath.setAttribute(\"id\", id);\n    clipPath.appendChild(this.__currentElement);\n\n    this.__defs.appendChild(clipPath);\n\n    //set the clip path to this group\n    group.setAttribute(\"clip-path\", format(\"url(#{id})\", { id: id }));\n\n    //clip paths can be scaled and transformed, we need to add another wrapper group to avoid later transformations\n    // to this path\n    group.appendChild(newGroup);\n\n    this.__currentElement = newGroup;\n  }\n\n  /**\n   * Draws a canvas, image or mock context to this canvas.\n   * Note that all svg dom manipulation uses node.childNodes rather than node.children for IE support.\n   * http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-drawimage\n   */\n  drawImage() {\n    //convert arguments to a real array\n    let args = Array.prototype.slice.call(arguments),\n      image = args[0],\n      dx,\n      dy,\n      dw,\n      dh,\n      sx = 0,\n      sy = 0,\n      sw,\n      sh,\n      parent,\n      svg,\n      defs,\n      group,\n      currentElement,\n      svgImage,\n      canvas,\n      context,\n      id;\n\n    if (args.length === 3) {\n      dx = args[1];\n      dy = args[2];\n      sw = image.width;\n      sh = image.height;\n      dw = sw;\n      dh = sh;\n    } else if (args.length === 5) {\n      dx = args[1];\n      dy = args[2];\n      dw = args[3];\n      dh = args[4];\n      sw = image.width;\n      sh = image.height;\n    } else if (args.length === 9) {\n      sx = args[1];\n      sy = args[2];\n      sw = args[3];\n      sh = args[4];\n      dx = args[5];\n      dy = args[6];\n      dw = args[7];\n      dh = args[8];\n    } else {\n      throw new Error(\n        \"Invalid number of arguments passed to drawImage: \" + arguments.length\n      );\n    }\n\n    parent = this.__closestGroupOrSvg();\n    currentElement = this.__currentElement;\n    let translateDirective = \"translate(\" + dx + \", \" + dy + \")\";\n    if (image instanceof CanvasToSvg) {\n      //canvas2svg mock canvas context. In the future we may want to clone nodes instead.\n      //also I'm currently ignoring dw, dh, sw, sh, sx, sy for a mock context.\n      svg = image.getSvg().cloneNode(true);\n      if (svg.childNodes && svg.childNodes.length > 1) {\n        defs = svg.childNodes[0];\n        while (defs.childNodes.length) {\n          id = (defs.childNodes[0] as SVGElement).getAttribute(\"id\") as string;\n          this.__ids[id] = id;\n          this.__defs.appendChild(defs.childNodes[0]);\n        }\n        group = svg.childNodes[1];\n        if (group) {\n          //save original transform\n          let originTransform = (group as SVGElement).getAttribute(\"transform\");\n          let transformDirective;\n          if (originTransform) {\n            transformDirective = originTransform + \" \" + translateDirective;\n          } else {\n            transformDirective = translateDirective;\n          }\n          (group as SVGElement).setAttribute(\"transform\", transformDirective);\n          (parent as Node).appendChild(group);\n        }\n      }\n    } else if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n      //canvas or image\n      svgImage = this.__createElement(\"image\");\n      svgImage.setAttribute(\"width\", dw);\n      svgImage.setAttribute(\"height\", dh);\n      svgImage.setAttribute(\"preserveAspectRatio\", \"none\");\n\n      if (sx || sy || sw !== image.width || sh !== image.height) {\n        //crop the image using a temporary canvas\n        canvas = this.__document.createElement(\"canvas\");\n        canvas.width = dw;\n        canvas.height = dh;\n        context = canvas.getContext(\"2d\");\n        if (!context) return;\n        context.drawImage(image, sx, sy, sw, sh, 0, 0, dw, dh);\n        image = canvas;\n      }\n      svgImage.setAttribute(\"transform\", translateDirective);\n      svgImage.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        image.nodeName === \"CANVAS\"\n          ? image.toDataURL()\n          : image.getAttribute(\"src\")\n      );\n      (parent as Node).appendChild(svgImage);\n    }\n  }\n\n  /**\n   * Generates a pattern tag\n   */\n  createPattern(image: any, repetition: any) {\n    let pattern = this.__document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"pattern\"\n      ),\n      id = randomString(this.__ids),\n      img;\n    pattern.setAttribute(\"id\", id);\n    pattern.setAttribute(\"width\", image.width);\n    pattern.setAttribute(\"height\", image.height);\n    if (image.nodeName === \"CANVAS\" || image.nodeName === \"IMG\") {\n      img = this.__document.createElementNS(\n        \"http://www.w3.org/2000/svg\",\n        \"image\"\n      );\n      img.setAttribute(\"width\", image.width);\n      img.setAttribute(\"height\", image.height);\n      img.setAttributeNS(\n        \"http://www.w3.org/1999/xlink\",\n        \"xlink:href\",\n        image.nodeName === \"CANVAS\"\n          ? image.toDataURL()\n          : image.getAttribute(\"src\")\n      );\n      pattern.appendChild(img);\n      this.__defs.appendChild(pattern);\n    } else if (image instanceof CanvasToSvg) {\n      pattern.appendChild(image.__root.childNodes[1]);\n      this.__defs.appendChild(pattern);\n    }\n    return new CanvasPattern(pattern, this);\n  }\n\n  setLineDash(dashArray: any) {\n    if (dashArray && dashArray.length > 0) {\n      this.lineDash = dashArray.join(\",\");\n    } else {\n      this.lineDash = null;\n    }\n  }\n\n  /*\n  ctx.prototype.drawFocusRing = function () {};\n    ctx.prototype.createImageData = function () {};\n    ctx.prototype.getImageData = function () {};\n    ctx.prototype.putImageData = function () {};\n    ctx.prototype.globalCompositeOperation = function () {};\n    ctx.prototype.setTransform = function () {};\n    */\n}\n","import canvasToSvg from \"canvas-to-svg\";\n\nvar CRp = {};\nvar is = {};\n\nis.number = (obj) => obj != null && typeof obj === typeof 1 && !isNaN(obj);\n\nCRp.bufferCanvasImage = function (options, cy) {\n  //disable usePaths temporarily\n  var usePaths = cy.renderer().usePaths;\n  cy.renderer().usePaths = () => {\n    return false;\n  };\n  // flush path cache\n  cy.elements().forEach(function (ele) {\n    ele._private.rscratch.pathCacheKey = null;\n    ele._private.rscratch.pathCache = null;\n  });\n\n  var renderer = cy.renderer();\n  var eles = cy.mutableElements();\n  var bb = eles.boundingBox();\n  var ctrRect = renderer.findContainerClientCoords();\n  var width = options.full ? Math.ceil(bb.w) : ctrRect[2];\n  var height = options.full ? Math.ceil(bb.h) : ctrRect[3];\n  var specdMaxDims =\n    is.number(options.maxWidth) || is.number(options.maxHeight);\n  var pxRatio = renderer.getPixelRatio();\n  var scale = 1;\n\n  if (options.scale !== undefined) {\n    width *= options.scale;\n    height *= options.scale;\n\n    scale = options.scale;\n  } else if (specdMaxDims) {\n    var maxScaleW = Infinity;\n    var maxScaleH = Infinity;\n\n    if (is.number(options.maxWidth)) {\n      maxScaleW = (scale * options.maxWidth) / width;\n    }\n\n    if (is.number(options.maxHeight)) {\n      maxScaleH = (scale * options.maxHeight) / height;\n    }\n\n    scale = Math.min(maxScaleW, maxScaleH);\n\n    width *= scale;\n    height *= scale;\n  }\n\n  if (!specdMaxDims) {\n    width *= pxRatio;\n    height *= pxRatio;\n    scale *= pxRatio;\n  }\n\n  var buffCxt = null;\n  var buffCanvas = (buffCxt = new canvasToSvg(width, height));\n\n  // Rasterize the layers, but only if container has nonzero size\n  if (width > 0 && height > 0) {\n    buffCxt.clearRect(0, 0, width, height);\n\n    // fill background\n    if (options.bg) {\n      buffCxt.globalCompositeOperation = \"destination-over\";\n\n      buffCxt.fillStyle = options.bg;\n      buffCxt.fillRect(0, 0, width, height);\n    }\n\n    buffCxt.globalCompositeOperation = \"source-over\";\n\n    var zsortedEles = renderer.getCachedZSortedEles();\n\n    if (options.full) {\n      // draw the full bounds of the graph\n      buffCxt.translate(-bb.x1 * scale, -bb.y1 * scale);\n      buffCxt.scale(scale, scale);\n\n      renderer.drawElements(buffCxt, zsortedEles);\n\n      buffCxt.scale(1 / scale, 1 / scale);\n      buffCxt.translate(bb.x1 * scale, bb.y1 * scale);\n    } else {\n      // draw the current view\n      var pan = cy.pan();\n\n      var translation = {\n        x: pan.x * scale,\n        y: pan.y * scale,\n      };\n\n      scale *= cy.zoom();\n\n      buffCxt.translate(translation.x, translation.y);\n      buffCxt.scale(scale, scale);\n\n      renderer.drawElements(buffCxt, zsortedEles);\n\n      buffCxt.scale(1 / scale, 1 / scale);\n      buffCxt.translate(-translation.x, -translation.y);\n    }\n  }\n\n  // restore usePaths to default value\n  cy.renderer().usePaths = usePaths;\n  return buffCanvas;\n};\n\nfunction output(canvas) {\n  return canvas.getSerializedSvg();\n}\n\nCRp.svg = function (options) {\n  return output(CRp.bufferCanvasImage(options || {}, this));\n};\n\nexport default CRp;\n","import impl from \"./convert-to-svg.js\";\n\n// registers the extension on a cytoscape lib ref\nlet register = function (cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n  cytoscape(\"core\", \"svg\", impl.svg); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== \"undefined\") {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n"],"names":["format","str","args","i","keys","Object","length","replace","RegExp","randomString","holder","chars","randomstring","Error","Math","floor","random","getTextAnchorMap","left","right","center","start","end","getDominantBaselineMap","alphabetic","hanging","top","bottom","middle","normalize","vector","len","sqrt","namedEntities","items","radix","entity","base10","lookup","itemsArr","split","parseInt","createNamedToNumberedLookup","STYLES","strokeStyle","svgAttr","canvas","svg","apply","fillStyle","lineCap","lineJoin","miterLimit","lineWidth","globalAlpha","font","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textAlign","textBaseline","lineDash","CanvasGradient","gradientNode","ctx","__root","__ctx","this","addColorStop","offset","color","matches","stop","__createElement","setAttribute","indexOf","exec","r","g","b","appendChild","CanvasPattern","patternNode","defaultOptions","width","height","enableMirroring","CanvasToSvg","options","__document","__canvas","__ids","__defs","__currentElement","__groupStack","__currentElementsToStyle","document","createElement","getContext","__setDefaultStyles","__stack","__getStyleState","createElementNS","setAttributeNS","toString","elementName","properties","resetFill","key","element","__applyStyleState","styleState","__applyStyleToCurrentElement","type","style","value","id","currentElement","childNodes","getAttribute","attr","opacity","parseFloat","__closestGroupOrSvg","node","nodeName","parentNode","getSerializedSvg","fixNamedEntities","regexp","serialized","XMLSerializer","serializeToString","test","getSvg","save","group","parent","push","restore","pop","state","__addTransform","t","children","__applyCurrentDefaultPath","transform","scale","x","y","undefined","rotate","angle","degrees","PI","cx","cy","translate","a","c","d","e","f","beginPath","path","__currentDefaultPath","__currentPosition","console","error","__addPathCommand","command","moveTo","closePath","lineTo","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","arcTo","x1","y1","x2","y2","radius","x0","y0","unit_vec_p1_p0","unit_vec_p1_p2","theta","acos","abs","unit_vec_p1_origin","len_p1_origin","sin","unit_vec_origin_start_tangent","unit_vec_origin_end_tangent","getAngle","startAngle","endAngle","arc","stroke","fill","rect","fillRect","strokeRect","__clearCanvas","current","rootGroup","removeChild","clearRect","createLinearGradient","grad","gradientUnits","createRadialGradient","r0","r1","fx","fy","__parseFont","fontPart","data","size","family","weight","decoration","href","__fontUnderline","__fontHref","__wrapTextLink","__applyText","text","action","textElement","createTextNode","fillText","strokeText","measureText","counterClockwise","largeArcFlag","endX","cos","endY","startX","startY","sweepFlag","diff","rx","ry","xAxisRotation","clip","clipPath","newGroup","drawImage","dx","dy","dw","dh","sw","sh","defs","svgImage","context","Array","prototype","slice","call","arguments","image","sx","sy","translateDirective","cloneNode","originTransform","toDataURL","createPattern","repetition","img","pattern","setLineDash","dashArray","join","canvasToSvg","impl"],"mappings":"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"}